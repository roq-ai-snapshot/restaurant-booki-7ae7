generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model chef {
  id               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  speciality       String     @db.VarChar(255)
  experience_years Int
  user_id          String     @db.Uuid
  restaurant_id    String     @db.Uuid
  availability     Boolean
  working_hours    String     @db.VarChar(255)
  off_days         String     @db.VarChar(255)
  created_at       DateTime   @default(now()) @db.Timestamp(6)
  updated_at       DateTime   @default(now()) @db.Timestamp(6)
  restaurant       restaurant @relation(fields: [restaurant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user             user       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model menu {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String     @db.VarChar(255)
  description   String?    @db.VarChar(255)
  price         Int
  restaurant_id String     @db.Uuid
  user_id       String     @db.Uuid
  category      String     @db.VarChar(255)
  availability  Boolean
  created_at    DateTime   @default(now()) @db.Timestamp(6)
  updated_at    DateTime   @default(now()) @db.Timestamp(6)
  restaurant    restaurant @relation(fields: [restaurant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user          user       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model reservation {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date             DateTime @db.Date
  time             DateTime @db.Time(6)
  table_id         String   @db.Uuid
  user_id          String   @db.Uuid
  status           String   @db.VarChar(255)
  number_of_people Int
  special_request  String?  @db.VarChar(255)
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  table            table    @relation(fields: [table_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user             user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model restaurant {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description   String?  @db.VarChar(255)
  location      String?  @db.VarChar(255)
  opening_hours String?  @db.VarChar(255)
  closing_hours String?  @db.VarChar(255)
  name          String   @db.VarChar(255)
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  user_id       String   @db.Uuid
  tenant_id     String   @db.VarChar(255)
  chef          chef[]
  menu          menu[]
  user          user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  table         table[]
}

model table {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  number        Int
  capacity      Int
  restaurant_id String        @db.Uuid
  user_id       String        @db.Uuid
  status        String        @db.VarChar(255)
  type          String        @db.VarChar(255)
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  reservation   reservation[]
  restaurant    restaurant    @relation(fields: [restaurant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user          user          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  chef        chef[]
  menu        menu[]
  reservation reservation[]
  restaurant  restaurant[]
  table       table[]
}
